{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Aviatrix Systems - Master Stack - Creates the necessary policies, roles, security group and launches Aviatrix Controller instance",
  "Metadata" :
  {
    "AWS::CloudFormation::Interface" :
    {
      "ParameterGroups" :
      [
        { "Label" : { "default": "Amazon EC2 Configuration" }, "Parameters" : [ "KeyNameParam" ] },
        { "Label" : { "default" : "VPC Configuration"}, "Parameters" : [ "NewVPCCIDRParam", "NewSubnetParam", "NewAZParam", "NewSubnetParamHA", "NewAZParamHA" ] },
        { "Label" : { "default" : "Controller Information" }, "Parameters" : [ "adminemailParam", "passwordParam", "ControllerSizeParam" ] },
        { "Label" : { "default" : "Licensing Configuration"}, "Parameters" : [ "LicenseModel", "License" ] },
        { "Label" : { "default" : "Gateway Information" }, "Parameters" : [ "HubGWSizeParam", "SpokeGWSizeParam", "SpokeTag"] },
        { "Label" : { "default" : "IAM Roles Information" }, "Parameters" : [ "OtherAccount", "OtherAccountRoleApp", "OtherAccountRoleEC2"] }
      ],
      "ParameterLabels" :
      {
         "NewVPCCIDRParam" : { "default" : "VPC's CIDR Block?"},
         "NewSubnetParam" : { "default" : "Subnet CIDR Block?"},
         "NewSubnetParamHA" : { "default" : "Subnet CIDR Block for HA?"},
         "NewAZParam" : { "default": "Availability zone" },
         "NewAZParamHA" : { "default": "Availability zone for HA"},
         "KeyNameParam" : { "default" : "Which keypair will be used?" },
         "adminemailParam" : { "default" : "Administrator email address?"},
         "passwordParam" : { "default" : "Password for admin on Aviatrix Controller? " },
         "ControllerSizeParam" : { "default" : "Instance Size for the Aviatrix Controller?"},
         "HubGWSizeParam" : { "default" : "Instance Size for the Aviatrix Hub Gateway?" },
         "SpokeGWSizeParam" : { "default" : "Instance Size for the Aviatrix Spoke Gateways?" },
         "SpokeTag" : { "default" : "Spoke VPC Tag Name" },
         "OtherAccount" : { "default" : "Second Account number"},
         "OtherAccountRoleApp" : { "default" : "ARN for Aviatrix-role-app on secondary account"},
         "OtherAccountRoleEC2" : { "default" : "ARN for aviatrix-role-ec2 on secondary account"},
         "LicenseModel" : { "default" : "Licensing Model?:"},
         "License" :  { "default" : "Enter your license key:"}
       }
    }
  },
  "Parameters":
  {
    "NewVPCCIDRParam" : {
      "Type" : "String",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Description" : "(Required) VPC subnet CIDR block (Default: 10.1.0.0/16)",
      "Default": "10.1.0.0/16"
    },
    "NewSubnetParam" : {
      "Type" : "String",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Description" : "(Required) Subnet for the Controller and Hub Gateway (Default: 10.1.0.0/24)",
      "Default": "10.1.0.0/24"
    },
    "NewSubnetParamHA" : {
      "Type" : "String",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Description" : "(Required) Subnet for the HA Hub Gateway (Default: 10.1.1.0/24)",
      "Default": "10.1.1.0/24"
    },
    "NewAZParam":{
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "NewAZParamHA":{
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "KeyNameParam": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "(Required) Select your Keypair"
    },
    "adminemailParam": {
      "Type": "String",
      "Description": "(Required) Email of the controller's admin"
    },
    "passwordParam": {
      "Type": "String",
      "Description": "(Required) Password for the controller. Please use a complex password.",
      "NoEcho": true
    },
    "ControllerSizeParam":
    {
      "Type" : "String",
      "Default" : "t2.large",
      "AllowedValues" : ["t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
      "Description" : "Select an instance size. Default is t2.large."
    },
    "HubGWSizeParam":
    {
      "Type" : "String",
      "Default" : "t2.medium",
      "AllowedValues" : ["t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
      "Description" : "Select an instance size. Default is t2.medium."
    },
    "SpokeGWSizeParam":
    {
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
      "Description" : "Select an instance size. Default is t2.micro."
    },
    "SpokeTag" :{
      "Type" : "String",
      "Default" : "aviatrix-spoke",
      "Description" : "Tag to be used to identify spoke VPCs to connect to Transit VPC. Default is aviatrix-spoke."
    },
     "OtherAccount" : {
        "Type" : "String",
        "Default" : "",
        "Description" : "(Optional) Enter the number of the secondary AWS account where spokes will be deployed."
     },
     "OtherAccountRoleApp" : {
       "Type" : "String",
       "Default" : "",
       "Description" : "(Optional) Enter the ARN of the aviatrix-role-app on the secondary account where spokes will be deployed."
    },
    "OtherAccountRoleEC2" : {
       "Type" : "String",
       "Default" : "",
       "Description" : "(Optional) Enter the ARN of the Aviatrix-role-ec2 on the secondary account where spokes will be deployed."
    },
    "LicenseModel" : {
      "Description" : "Choose between BYOL or License Included - licensing models.",
      "Type" : "String",
      "Default" : "LicenseIncluded",
      "AllowedValues" : [ "LicenseIncluded", "BYOL" ]
    },
    "License": {
      "Description" : "(Required, only if using BYOL License Model) If you don't have one, please contact sales@aviatrix.com. For LicenseIncluded leave BLANK",
      "Type" : "String"
    }
  },
  "Conditions" : {
    "NotBlankLicense" : { "Fn::Not" : [ { "Fn::Equals": [ { "Ref": "License" }, "" ] } ] }
  },
  "Resources" :
  {
    "AVXVPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
          "TemplateURL": {
              "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-vpc.template"
          },
          "Parameters": {
            "NewVPCCIDRParam" : {
              "Ref": "NewVPCCIDRParam"
            },
            "NewSubnetParam": {
              "Ref": "NewSubnetParam"
            },
            "NewSubnetParamHA": {
              "Ref": "NewSubnetParamHA"
            },
            "NewAZParam": {
              "Ref": "NewAZParam"
            },
            "NewAZParamHA": {
              "Ref": "NewAZParamHA"
            }
          }
      }
    },
    "AVXIAMRolesStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
          "TemplateURL": {
              "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-iamroles.template"
          },
          "Parameters": {
            "ParentAccountID": ""
          }
      }
    },
    "AVXControllerStack": {
        "DependsOn": "AVXIAMRolesStack",
        "Type": "AWS::CloudFormation::Stack",
        "Properties": {
          "TemplateURL": {
            "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-controller.template"
          },
          "Parameters": {
              "VPCParam" : {
                "Fn::GetAtt": [
                  "AVXVPCStack",
                  "Outputs.VPCID"
                ]
              },
              "SubnetParam" : {
                "Fn::GetAtt": [
                  "AVXVPCStack",
                  "Outputs.SubnetID"
                ]
              },
              "ControllerSizeParam" : {
                "Ref": "ControllerSizeParam"
              },
              "KeyNameParam" : {
                "Ref": "KeyNameParam"
              },
              "LicenseModel" : {
                "Ref": "LicenseModel"
              },
              "License" : {
                "Ref": "License"
              },
              "AviatrixInstanceProfile" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AviatrixInstanceProfile"
                ]
              }
          }
        }
    },
    "AVXLambdaStack": {
        "DependsOn": "AVXControllerStack",
        "Type": "AWS::CloudFormation::Stack",
        "Properties": {
          "TemplateURL": {
            "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-lambda.template"
          },
          "Parameters": {
              "controllerip" : {
                "Fn::GetAtt": [
                    "AVXControllerStack",
                    "Outputs.AviatrixControllerEIP"
                ]
              },
              "username" : "admin",
              "privateip" : {
                "Fn::GetAtt": [
                    "AVXControllerStack",
                    "Outputs.AviatrixControllerPrivateIP"
                ]
              },
              "adminemail" : {
                "Ref": "adminemailParam"
              },
              "password" : {
                "Ref": "passwordParam"
              },
              "AviatrixRoleApp" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AviatrixRoleAppARN"
                ]
              },
              "AviatrixRoleEC2" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AviatrixRoleEC2ARN"
                ]
              },
              "Account" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AccountId"
                ]
              },
              "VPC" : {
                "Fn::GetAtt": [
                  "AVXVPCStack",
                  "Outputs.VPCID"
                ]
              },
              "SubnetParam" : {
                "Fn::GetAtt": [
                  "AVXVPCStack",
                  "Outputs.SubnetCIDR"
                ]
              },
              "SubnetParamHA" : {
                "Fn::GetAtt": [
                  "AVXVPCStack",
                  "Outputs.SubnetCIDRHA"
                ]
              },
              "HubGWSizeParam": {
          			"Ref": "HubGWSizeParam"
          		},
          		"SpokeGWSizeParam":
              {
                "Ref": "SpokeGWSizeParam"
              },
              "SpokeTag": {
                "Ref": "SpokeTag"
              },
              "OtherAccount": {
                "Ref": "OtherAccount"
              },
              "OtherAccountRoleApp": {
                "Ref": "OtherAccountRoleApp"
              },
              "OtherAccountRoleEC2": {
                "Ref": "OtherAccountRoleEC2"
              },
              "LicenseModel" : {
                "Ref": "LicenseModel"
              },
              "License" : {
                "Fn::If" : [ "NotBlankLicense", { "Ref": "License" }, "" ]
              }
            }
          }
        }
  },
  "Outputs" :
  {
    "AccountId" : { "Description": "Amazon Account ID", "Value" : { "Fn::GetAtt" : [ "AVXIAMRolesStack", "Outputs.AccountId" ] } },
    "AviatrixRoleAppARN" : { "Description": "AviatrixRoleApp ARN", "Value" : { "Fn::GetAtt" : [ "AVXIAMRolesStack", "Outputs.AviatrixRoleAppARN" ] } },
    "AviatrixRoleEC2ARN" : { "Description": "AviatrixRoleEC2 ARN", "Value" : { "Fn::GetAtt" : [ "AVXIAMRolesStack", "Outputs.AviatrixRoleEC2ARN" ] } },
    "AviatrixControllerEIP" : { "Description": "AviatrixController External IP", "Value" : { "Fn::GetAtt" : [ "AVXControllerStack", "Outputs.AviatrixControllerEIP" ] } },
    "AviatrixControllerPrivateIP" : { "Description": "AviatrixController Private IP", "Value" : { "Fn::GetAtt" : [ "AVXControllerStack", "Outputs.AviatrixControllerPrivateIP" ] } }
  }
}

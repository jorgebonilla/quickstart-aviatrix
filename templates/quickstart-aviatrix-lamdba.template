{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Aviatrix Systems - Creates the necessary lambdas necessary to configure the controller",
    "Metadata" :
    {
      "AWS::CloudFormation::Interface" :
      {
        "ParameterGroups" : [ { "Label" : { "default" : "Lambda Required Parameters" }, "Parameters" : [ "controllerip", "username", "privateip",  "adminemail", "password", "Account", "AviatrixRoleApp",  "AviatrixRoleEC2", "VPC", "GatewaySizeParam"] } ]
      }
    },
    "Parameters":
    {
      "controllerip": { "Type": "String", "Description": "IP of the controller" },
      "username": {  "Type": "String", "Description": "Username for the controller" },
      "privateip": { "Type": "String", "Description": "Private IP of the controller" },
      "adminemail": { "Type": "String", "Description": "Email of the controller admin" },
      "password": { "Type": "String", "Description": "Password for the controller" },
      "Account": { "Type": "String", "Description": "AWS Account" },
      "AviatrixRoleApp": { "Type": "String", "Description": "ARN for aviatrix-role-app" },
      "AviatrixRoleEC2": { "Type": "String", "Description": "ARN for aviatrix-role-ec2" },
      "VPC" : { "Type": "String", "Description": "VPC to deploy the Controller and Hub Gateway" },
      "GatewaySizeParam":
      {
        "Type" : "String",
        "Default" : "t2.small",
        "AllowedValues" : ["t2.small", "t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
        "Description" : "Select an instance size. Default is t2.small."
      }
    },
    "Resources" :
    {
      "AviatrixRoleAPI" :
      {
        "Type": "AWS::IAM::Role",
        "Properties": {
           "RoleName": "aviatrix-role-api",
           "AssumeRolePolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [ {
                 "Effect": "Allow",
                 "Principal": {
                    "Service": [
                      "lambda.amazonaws.com",
                      "edgelambda.amazonaws.com"
                    ]
                 },
                 "Action": [ "sts:AssumeRole" ]
              } ]
           },
           "Path": "/service-role/"
         }
     },
     "AviatrixAPIRolePolicy" :
     {
       "Type" : "AWS::IAM::ManagedPolicy",
       "Properties" :
       {
         "ManagedPolicyName" : "aviatrix-api-role-policy",
         "Description" : "Policy for creating aviatrix-api-role-policy",
         "Path" : "/service-role/",
         "PolicyDocument" :
         {
           "Version": "2012-10-17",
           "Statement": [
               {
                   "Effect": "Allow",
                   "Action": [
                         "logs:CreateLogGroup",
                         "logs:CreateLogStream",
                         "logs:PutLogEvents",
                         "ec2:Describe*",
                         "ec2:CreateTags"
                   ],
                   "Resource": "*",
               }
           ]
         },
         "Roles" :
         [ {
           "Ref": "AviatrixRoleAPI"
         } ]
       }
     },
     "AviatrixKey" : {
       "Type" : "AWS::KMS::Key",
       "Properties" : {
         "Description" : "Key to encrypt Aviatrix Data",
         "KeyPolicy" : {
           "Version": "2012-10-17",
           "Id": "key-default-1",
           "Statement": [
                 {
                   "Sid": "Enable IAM User Permissions",
                   "Effect": "Allow",
                   "Principal": {
                     "AWS": [
                       { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":root" ] ] }
                     ]
                   },
                   "Action": "kms:*",
                   "Resource": "*"
                 },
                 {
                   "Sid": "Allow use of the key",
                   "Effect": "Allow",
                   "Principal": {
                     "AWS": [ { "Fn::GetAtt" : ["AviatrixRoleAPI", "Arn"] } ]
                   },
                   "Action": [
                     "kms:Encrypt",
                     "kms:Decrypt",
                     "kms:ReEncrypt*",
                     "kms:GenerateDataKey*",
                     "kms:DescribeKey"
                   ],
                   "Resource": "*"
                 },
           ]
         }
       }
     },
     "AviatrixKeyAlias" : {
        "Type" : "AWS::KMS::Alias",
        "Properties" : {
          "AliasName" : "alias/AviatrixKey",
          "TargetKeyId" : {"Ref":"AviatrixKey"}
        }
    },
    "AviatrixFirstRunLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "aviatrix_controller_setup.handler",
        "Role": { "Fn::GetAtt" : ["AviatrixRoleAPI", "Arn"] },
        "Code": {
          "S3Bucket": "quickstart-aviatrix",
          "S3Key": "aviatrix_controller_setup.py.zip"
        },
        "KmsKeyArn": { "Fn::GetAtt" : ["AviatrixKey", "Arn"] },
        "Environment":
        {
          "Variables":
          {
            "controller_ip": { "Ref": "controllerip" },
            "username": { "Ref": "username" },
            "private_ip": { "Ref": "privateip" },
            "admin_email": { "Ref": "adminemail" },
            "password": { "Ref": "password" },
            "Account" : { "Ref": "Account" },
            "AviatrixRoleApp" : { "Ref": "AviatrixRoleApp" },
            "AviatrixRoleEC2" : { "Ref": "AviatrixRoleEC2" },
            "VPC" : { "Ref": "VPC" },
            "Region": { "Ref" : "AWS::Region" },
            "GatewaySizeParam" : { "Ref": "GatewaySizeParam" },
            "first_run": "true",
            "setup_run": "true"
          }
        },
        "Runtime": "python2.7",
        "Timeout": "300"
      }
    },
    "AviatrixPollerLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "aviatrix_poller.handler",
        "Role": { "Fn::GetAtt" : ["AviatrixRoleAPI", "Arn"] },
        "Code": {
          "S3Bucket": "quickstart-aviatrix",
          "S3Key": "aviatrix_poller.py.zip"
        },
        "KmsKeyArn": { "Fn::GetAtt" : ["AviatrixKey", "Arn"] },
        "Environment":
        {
          "Variables":
          {
            "controller_ip": { "Ref": "controllerip" },
            "username": { "Ref": "username" },
            "private_ip": { "Ref": "privateip" },
            "admin_email": { "Ref": "adminemail" },
            "password": { "Ref": "password" },
            "Account" : { "Ref": "Account" },
            "AviatrixRoleApp" : { "Ref": "AviatrixRoleApp" },
            "AviatrixRoleEC2" : { "Ref": "AviatrixRoleEC2" },
            "VPC" : { "Ref": "VPC" },
            "Region": { "Ref" : "AWS::Region" },
            "GatewaySizeParam" : { "Ref": "GatewaySizeParam" },
            "first_run": "true",
            "setup_run": "true"
          }
        },
        "Runtime": "python2.7",
        "Timeout": "300"
      }
    },
    "AviatrixPollerEvent": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Rule to trigger AviatrixPoller every 5 minutes to find VPCs that need to be attached to the Transit Hub VPC.",
        "ScheduleExpression": "cron(0/5 * * * ? *)",
        "State": "ENABLED",
        "Targets": [ {
          "Id": { "Fn::Join": ["-", [ { "Ref" : "AWS::StackName" },"VGW-Poller-5min" ]] },
          "Arn": { "Fn::GetAtt": [ "AviatrixPollerLambda", "Arn" ] }
        } ]
      }
    },
    "AviatrixPermissionForPollerEvent": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Ref": "AviatrixPollerLambda" },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": { "Fn::GetAtt": ["AviatrixPollerEvent", "Arn"] }
      }
    },
  },
 }

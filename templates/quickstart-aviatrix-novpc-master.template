{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Aviatrix Systems - Master Stack - Creates the necessary policies, roles, security group and launches Aviatrix Controller instance",
  "Metadata" :
  {
    "AWS::CloudFormation::Interface" :
    {
      "ParameterGroups" :
      [
        { "Label" : { "default": "Amazon EC2 Configuration" }, "Parameters" : [ "KeyNameParam" ] },
        { "Label" : { "default" : "Existing VPC Configuration" }, "Parameters" : [ "VPCParam", "SubnetParam", "SubnetCIDRParam", "SubnetParamHA", "SubnetCIDRParamHA"] },
        { "Label" : { "default" : "Controller Information" }, "Parameters" : [ "adminemailParam", "passwordParam", "ControllerSizeParam" ] },
        { "Label" : { "default" : "Licensing Configuration"}, "Parameters" : [ "LicenseModel", "License" ] },
        { "Label" : { "default" : "Gateway Information" }, "Parameters" : [ "HubGWSizeParam", "SpokeGWSizeParam", "SpokeTag"] },
        { "Label" : { "default" : "IAM Roles Information" }, "Parameters" : [ "IAMRoleParam" ] }
      ],
      "ParameterLabels" :
      {
         "VPCParam" : { "default" : "Which VPC should the Aviatrix Controller be deployed to?" },
         "SubnetParam" : { "default" : "Which subnet within that VPC?" },
         "SubnetParamHA" : { "default" : "Which subnet within that VPC for HA?" },
         "SubnetCIDRParam" : { "default" : "Insert the CIDR for this subnet" },
         "SubnetCIDRParamHA" : { "default" : "Insert the CIDR for the HA subnet" },
         "KeyNameParam" : { "default" : "Which keypair will be used?" },
         "adminemailParam" : { "default" : "Administrator email address?"},
         "passwordParam" : { "default" : "Password for admin on Aviatrix Controller? (Complex Password)" },
         "ControllerSizeParam" : { "default" : "Instance Size for the Aviatrix Controller?"},
         "HubGWSizeParam" : { "default" : "Instance Size for the Aviatrix Hub Gateway?" },
         "SpokeGWSizeParam" : { "default" : "Instance Size for the Aviatrix Spoke Gateways?" },
         "SpokeTag" : { "default" : "Select the Tag that you want to use to mark the Spokes?" },
         "IAMRoleParam" : { "default" : "Select \"Create New\" if Aviatrix IAM role has not been created yet, select aviatrix-role-ec2 if aviatrix-role-ec2  IAM role already exists"},
         "LicenseModel" : { "default" : "Licensing Model?:"},
         "License" :  { "default" : "Enter your license key:"}
       }
    }
  },
  "Parameters":
  {
    "VPCParam": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "(Required) Select Your VPC"
    },
    "SubnetParam": {
      "Type" : "AWS::EC2::Subnet::Id"
    },
    "SubnetParamHA": {
      "Type" : "AWS::EC2::Subnet::Id"
    },
    "SubnetCIDRParam": {
      "Type" : "String",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
    },
    "SubnetCIDRParamHA": {
      "Type" : "String",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
    },
    "KeyNameParam": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "(Required) Select your Keypair"
    },
    "adminemailParam": {
      "Type": "String",
      "Description": "(Required) Email of the controller admin"
    },
    "passwordParam": {
      "Type": "String",
      "Description": "(Required) Password for the controller",
      "NoEcho": true
    },
    "ControllerSizeParam":
    {
      "Type" : "String",
      "Default" : "t2.large",
      "AllowedValues" : ["t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
      "Description" : "Select an instance size. Default is t2.large."
    },
    "HubGWSizeParam":
    {
      "Type" : "String",
      "Default" : "t2.medium",
      "AllowedValues" : ["t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
      "Description" : "Select an instance size. Default is t2.medium."
    },
    "SpokeGWSizeParam":
    {
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m3.medium","m3.large","m3.xlarge","m4.large","m4.xlarge","c4.large","c4.xlarge"],
      "Description" : "Select an instance size. Default is t2.micro."
    },
    "SpokeTag" :{
      "Type" : "String",
      "Default" : "aviatrix-spoke",
      "Description" : "Enter the tag to mark the Spokes. Default is aviatrix-spoke."
    },
    "IAMRoleParam" : {
           "Description" : "Determine if IAM roles aviatrix-role-ec2 and aviatrix-role-app should be created.",
           "Default" : "Create New",
           "Type" : "String",
           "AllowedValues" : ["aviatrix-role-ec2", "Create New"]
     },
    "LicenseModel" : {
      "Description" : "Choose between BYOL or Utility License models.",
      "Type" : "String",
      "Default" : "LicenseIncluded",
      "AllowedValues" : ["LicenseIncluded", "BYOL"]
    },
    "License": {
      "Description" : "(Required, only if using BYOL License Model) If you don't have one, please contact sales@aviatrix.com. For LicenseIncluded leave BLANK",
      "Type" : "String"
    }
  },
  "Conditions" : {
    "CreateIAMRoles" : { "Fn::Equals": [ { "Ref": "IAMRoleParam" }, "Create New" ]},
    "NotBlankLicense" : { "Fn::Not" : [ { "Fn::Equals": [ { "Ref": "License" }, "" ] } ] }
  },
  "Resources" :
  {
    "AVXIAMRolesStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition" : "CreateIAMRoles",
      "Properties": {
          "TemplateURL": {
              "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-iamroles.template"
          },
          "Parameters": {
            "ParentAccountID": ""
          }
      }
    },
    "AVXControllerStack": {
        "DependsOn": "AVXIAMRolesStack",
        "Type": "AWS::CloudFormation::Stack",
        "Properties": {
          "TemplateURL": {
            "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-controller.template"
          },
          "Parameters": {
              "VPCParam" : {
                "Ref": "VPCParam"
              },
              "SubnetParam" : {
                "Ref": "SubnetParam"
              },
              "KeyNameParam" : {
                "Ref": "KeyNameParam"
              },
              "ControllerSizeParam" : {
                "Ref": "ControllerSizeParam"
              },
              "LicenseModel" : {
                "Ref": "LicenseModel"
              },
              "License" : {
                "Ref": "License"
              },
              "AviatrixInstanceProfile" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AviatrixInstanceProfile"
                ]
              }
          }
        }
    },
    "AVXLambdaStack": {
        "DependsOn": "AVXControllerStack",
        "Type": "AWS::CloudFormation::Stack",
        "Properties": {
          "TemplateURL": {
            "Fn::Sub": "https://s3.amazonaws.com/quickstart-aviatrix-us-east-1/templates/quickstart-aviatrix-lambda.template"
          },
          "Parameters": {
              "controllerip" : {
                "Fn::GetAtt": [
                    "AVXControllerStack",
                    "Outputs.AviatrixControllerEIP"
                ]
              },
              "username" : "admin",
              "privateip" : {
                "Fn::GetAtt": [
                    "AVXControllerStack",
                    "Outputs.AviatrixControllerPrivateIP"
                ]
              },
              "adminemail" : {
                "Ref": "adminemailParam"
              },
              "password" : {
                "Ref": "passwordParam"
              },
              "AviatrixRoleApp" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AviatrixRoleAppARN"
                ]
              },
              "AviatrixRoleEC2" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AviatrixRoleEC2ARN"
                ]
              },
              "Account" : {
                "Fn::GetAtt": [
                    "AVXIAMRolesStack",
                    "Outputs.AccountId"
                ]
              },
              "VPC" : {
                "Ref": "VPCParam"
              },
              "SubnetParam" : {
                "Ref": "SubnetCIDRParam"
              },
              "SubnetParamHA" : {
                "Ref": "SubnetCIDRParamHA"
              },
              "HubGWSizeParam": {
          			"Ref": "HubGWSizeParam"
          		},
          		"SpokeGWSizeParam":
              {
                "Ref": "SpokeGWSizeParam"
              },
              "SpokeTag": {
                "Ref": "SpokeTag"
              },
              "LicenseModel" : {
                "Ref": "LicenseModel"
              },
              "License" : {
                "Fn::If" : [ "NotBlankLicense", { "Ref": "License" }, "" ]
              }
            }
        }
      }
  },
  "Outputs" :
  {
    "AccountId" : { "Description": "Amazon Account ID", "Value" : { "Fn::GetAtt" : [ "AVXIAMRolesStack", "Outputs.AccountId" ] } },
    "AviatrixRoleAppARN" : { "Description": "AviatrixRoleApp ARN", "Value" : { "Fn::GetAtt" : [ "AVXIAMRolesStack", "Outputs.AviatrixRoleAppARN" ] } },
    "AviatrixRoleEC2ARN" : { "Description": "AviatrixRoleEC2 ARN", "Value" : { "Fn::GetAtt" : [ "AVXIAMRolesStack", "Outputs.AviatrixRoleEC2ARN" ] } },
    "AviatrixControllerEIP" : { "Description": "AviatrixController External IP", "Value" : { "Fn::GetAtt" : [ "AVXControllerStack", "Outputs.AviatrixControllerEIP" ] } },
    "AviatrixControllerPrivateIP" : { "Description": "AviatrixController Private IP", "Value" : { "Fn::GetAtt" : [ "AVXControllerStack", "Outputs.AviatrixControllerPrivateIP" ] } }
  }
}

{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Aviatrix Systems - Creates the necessary policies and roles",
    "Metadata" :
    {
      "AWS::CloudFormation::Interface" :
      {
        "ParameterGroups" : [ { "Label" : { "default" : "Parent AWS AccountId" }, "Parameters" : [ "ParentAccountID"] } ],
        "ParameterLabels" : { "ParentAccountID" : { "default" : "Parent AWS account? (optional)" } }
      }
    },
    "Parameters":
    {
      "ParentAccountID": { "Type": "String", "Description": "Parent AWS AccountId" }
    },
    "Conditions" : {
      "AddParentAccountID" : { "Fn::Not" : [ { "Fn::Equals": [ { "Ref": "ParentAccountID" }, "" ] } ] }
    },
    "Resources" :
    {
      "AviatrixRoleEC2" :
      {
        "Type": "AWS::IAM::Role",
        "Properties": {
           "RoleName": "aviatrix-role-ec2",
           "AssumeRolePolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [ {
                 "Effect": "Allow",
                 "Principal": {
                    "Service": [ "ec2.amazonaws.com" ]
                 },
                 "Action": [ "sts:AssumeRole" ]
              } ]
           },
           "Path": "/"
         }
     },
      "AviatrixRoleApp" :
      {
        "Type": "AWS::IAM::Role",
        "Properties": {
           "RoleName": "aviatrix-role-app",
           "AssumeRolePolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [ {
                 "Effect": "Allow",
                 "Principal": {
                   "Fn::If" : [ "AddParentAccountID",
                                { "AWS": [ { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "ParentAccountID" }, ":root" ] ] },
                                           { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" } , ":root" ] ] } ] },
                                { "AWS": [ { "Fn::Join" : [ "", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" } , ":root" ] ] } ] } ]
                 },
                 "Action": [ "sts:AssumeRole" ]
              } ]
           },
           "Path": "/"
         }
     },
      "CreateAviatrixAssumeRolePolicy" :
      {
        "Type" : "AWS::IAM::ManagedPolicy",
        "Properties" :
        {
          "ManagedPolicyName" : "aviatrix-assume-role-policy",
          "Description" : "Policy for creating aviatrix-assume-role-policy",
          "Path" : "/",
          "PolicyDocument" :
          {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",

        	    "Action": [
                        "iam:UpdateAssumeRolePolicy",
                        "sts:AssumeRole"
                    ],
                    "Resource": "arn:aws:iam::*"
                }
            ]
          },
          "Roles" :
          [ {
            "Ref": "AviatrixRoleEC2"
          } ]
        }
      },
      "CreateAviatrixAppPolicy" :
      {
        "Type" : "AWS::IAM::ManagedPolicy",
        "Properties" :
        {
          "ManagedPolicyName" : "aviatrix-app-policy",
          "Description" : "Policy for creating aviatrix-app-policy",
          "Path" : "/",
          "PolicyDocument" :
          {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:Describe*",
                        "elasticloadbalancing:Describe*",
                        "route53:List*",
                        "route53:Get*",
                        "sqs:Get*",
                        "sqs:List*",
                        "sns:List*",
                        "s3:List*",
                        "s3:Get*",
                        "iam:List*",
                        "iam:Get*"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:RunInstances"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "ec2:RunInstances",
                    "Resource": "arn:aws:ec2:*:*:image/ami-*"
                },
                {
                    "Effect": "Allow",
                    "Action": "ec2:RunInstances",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:DeleteSecurityGroup",
                        "ec2:RevokeSecurityGroupEgress",
                        "ec2:RevokeSecurityGroupIngress",
                        "ec2:AuthorizeSecurityGroup*",
                        "ec2:CreateSecurityGroup",
                        "ec2:AssociateRouteTable",
                        "ec2:CreateRoute",
                        "ec2:CreateRouteTable",
                        "ec2:DeleteRoute",
                        "ec2:DeleteRouteTable",
                        "ec2:DisassociateRouteTable",
                        "ec2:ReplaceRoute",
                        "ec2:ReplaceRouteTableAssociation"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:AllocateAddress",
                        "ec2:AssociateAddress",
                        "ec2:DisassociateAddress",
                        "ec2:ReleaseAddress",
                        "ec2:AssignPrivateIpAddresses",
                        "ec2:AttachNetworkInterface",
                        "ec2:CreateNetworkInterface",
                        "ec2:DeleteNetworkInterface",
                        "ec2:DetachNetworkInterface",
                        "ec2:ModifyNetworkInterfaceAttribute",
                        "ec2:ResetNetworkInterfaceAttribute",
                        "ec2:UnassignPrivateIpAddresses",
                        "ec2:ModifyInstanceAttribute",
                        "ec2:MonitorInstances",
                        "ec2:RebootInstances",
                        "ec2:ReportInstanceStatus",
                        "ec2:ResetInstanceAttribute",
                        "ec2:StartInstances",
                        "ec2:StopInstances",
                        "ec2:TerminateInstances",
                        "ec2:UnmonitorInstances",
                        "ec2:AttachInternetGateway",
                        "ec2:CreateInternetGateway",
                        "ec2:DeleteInternetGateway",
                        "ec2:DetachInternetGateway",
                        "ec2:CreateKeyPair",
                        "ec2:DeleteKeyPair",
                        "ec2:CreateSubnet",
                        "ec2:DeleteSubnet",
                        "ec2:ModifySubnetAttribute",
                        "ec2:CreateTags",
                        "ec2:DeleteTags",
                        "ec2:CreateVpc",
                        "ec2:DeleteVpc",
                        "ec2:ModifyVpcAttribute"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                        "elasticloadbalancing:AttachLoadBalancerToSubnets",
                        "elasticloadbalancing:ConfigureHealthCheck",
                        "elasticloadbalancing:CreateLoadBalancer*",
                        "elasticloadbalancing:DeleteLoadBalancer*",
                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                        "elasticloadbalancing:ModifyLoadBalancerAttributes",
                        "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "route53:ChangeResourceRecordSets",
                        "route53:CreateHostedZone",
                        "route53:DeleteHostedZone"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "s3:CreateBucket",
                        "s3:DeleteBucket",
                        "s3:PutObject"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "cloudwatch:DeleteAlarms",
                        "cloudwatch:PutMetricAlarm"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "sns:CreateTopic",
                        "sns:DeleteTopic",
                        "sns:Subscribe",
                        "sns:Unsubscribe"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "sqs:AddPermission",
                        "sqs:ChangeMessageVisibility",
                        "sqs:CreateQueue",
                        "sqs:DeleteMessage",
                        "sqs:DeleteQueue",
                        "sqs:PurgeQueue",
                        "sqs:ReceiveMessage",
                        "sqs:RemovePermission",
                        "sqs:SendMessage",
                        "sqs:SetQueueAttributes"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "iam:UpdateAssumeRolePolicy",
                        "sts:AssumeRole"
                    ],
                    "Resource": "arn:aws:iam::*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "iam:UpdateAssumeRolePolicy",
                        "iam:PassRole",
                        "iam:AddRoleToInstanceProfile",
                        "iam:CreateInstanceProfile",
                        "iam:DeleteInstanceProfile",
                        "iam:RemoveRoleFromInstanceProfile"
                    ],
                    "Resource": "*"
                }
            ]
          },
          "Roles" :
          [ {
            "Ref": "AviatrixRoleApp"
          } ]
        }
      },
      "AviatrixInstanceProfile":
      {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties":
        {
          "InstanceProfileName": "aviatrix-role-ec2",
          "Path": "/",
          "Roles": [ { "Ref": "AviatrixRoleEC2" } ]
        }
      }
    },
    "Outputs" :
    {
      "AccountId" : { "Description": "Amazon Account ID", "Value" : { "Ref" : "AWS::AccountId" } },
      "AviatrixRoleAppARN" : { "Description": "AviatrixRoleApp ARN", "Value" : { "Fn::GetAtt" : [ "AviatrixRoleApp" , "Arn" ] } },
      "AviatrixRoleEC2ARN" : { "Description": "AviatrixRoleEC2 ARN", "Value" : { "Fn::GetAtt" : [ "AviatrixRoleEC2" , "Arn" ] } },
      "AviatrixInstanceProfile" : { "Description": "Aviatrix Instance Profile", "Value" : { "Ref" :  "AviatrixInstanceProfile"} }
    }
}
